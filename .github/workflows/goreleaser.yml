name: goreleaser

on:
  push:
    branches:
      - 'master'
      - 'beta'
    tags:
      - 'v*'
  pull_request:

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      -
        name: Build Web
        run: |
          npm config set registry https://registry.npmjs.org
          npm install yarn -g
          yarn config set registry https://registry.yarnpkg.com
          npm install -g @quasar/cli
          chmod +x upx.sh;cd GroupManager/Web;yarn install;quasar build
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      # -
      #   name: Install UPX
      #   if: success() && startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     sudo apt-get install upx-ucl
      -
        name: Tests & build
        run: |
          go mod tidy
          go test -v ./...
      -
        name: Set up QEMU
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: docker/setup-buildx-action@v1
      - name: Log into registry
        if: success() && startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Build and push
        if: success() && startsWith(github.ref, 'refs/tags/')
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/386
          tags: mcenjoy/opqbot-groupmanager:latest,mcenjoy/opqbot-groupmanager:${{ github.ref }}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: "v0.173.2"
          args: release --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
